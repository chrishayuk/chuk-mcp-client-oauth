[project]
name = "chuk-mcp-client-oauth"
version = "0.1.6"
description = "A reusable OAuth 2.0 client library for MCP (Model Context Protocol) servers"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Christopher Hay", email = "chris@chrishay.com" }
]
keywords = ["mcp", "oauth", "oauth2", "authentication", "model-context-protocol"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Security",
]

dependencies = [
    "httpx>=0.24.0",
    "pydantic>=2.0.0",
    "cryptography>=41.0.0",
]

[project.scripts]
chuk-oauth = "chuk_mcp_client_oauth.cli:main"

[project.optional-dependencies]
vault = ["hvac>=1.0.0"]
keychain = []  # macOS built-in
linux = ["secretstorage>=3.3.0"]
windows = []  # Windows built-in
all = [
    "hvac>=1.0.0",
    "secretstorage>=3.3.0",
]

dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "respx>=0.20.0",
    "keyring>=24.0.0",
    "bandit>=1.7.0",
    "twine>=4.0.0",
    "build>=1.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/chuk_mcp_client_oauth"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
filterwarnings = [
    "ignore:coroutine.*was never awaited:RuntimeWarning",
]

[tool.black]
line-length = 88
target-version = ["py310", "py311", "py312"]

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false

# Ignore missing imports for optional dependencies
[[tool.mypy.overrides]]
module = ["hvac", "secretstorage", "keyring"]
ignore_missing_imports = true
